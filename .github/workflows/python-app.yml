# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: (PR) Format Python Code

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  python-code-format:
    runs-on: ubuntu-20.04
    # 실행할 단계 정의
    steps:
      # GitHub 리포지토리를 체크아웃 (클론)
      - name: Checkout code
        uses: actions/checkout@v2
        
      # Python 환경 설정
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
         python-version: "3.10" # Python 3.10 버전 사용
         architecture: "x64"
         
      # Python 버전 확인
      - name: Display Python version
        run: python --version # Python 버전 표시

      # 필요한 Python 패키지 설치
      - name: Install packages
        run: pip install black isort autopep8

      # 코드 포맷팅 작업 수행
      - name: Formatter
        run: |
          black .
          autopep8 --recursive --in-place --aggressive --agresive . # autopep8를 사용하여 코드 포맷팅
          isort .  # isort를 사용하여 코드 포맷팅
      # 변경사항 Commit
      - name: Commit format changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Github Action"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated format fixes"
          git push
          
      # # PR 생성
      # - name: Create Pull Request
      #   uses: peter-evans/create-pull-request@v3
      #   with:
      #     commit-message: Auto code format # 커밋 메시지
      #     title: Fixes by format action # 풀 리퀘스트 제목
      #     body: THis is an auto-generated PR with fixes. # 풀 리퀘스트 본문
      #     labels: automated pr # 레이블
      #     branch: python-code-format-patches # 새로운 브랜치 이름
